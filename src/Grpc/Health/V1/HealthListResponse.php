<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: grpc/health/v1/health.proto

namespace Grpc\Health\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\GPBUtil;
use Google\Protobuf\RepeatedField;

/**
 * Generated from protobuf message <code>grpc.health.v1.HealthListResponse</code>
 */
class HealthListResponse extends \Google\Protobuf\Internal\Message
{
    /**
     * statuses contains all the services and their respective status.
     *
     * Generated from protobuf field <code>map<string, .grpc.health.v1.HealthCheckResponse> statuses = 1 [json_name = "statuses"];</code>
     */
    private $statuses;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type array|\Google\Protobuf\Internal\MapField $statuses
     *           statuses contains all the services and their respective status.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Grpc\Health\V1\Health::initOnce();
        parent::__construct($data);
    }

    /**
     * statuses contains all the services and their respective status.
     *
     * Generated from protobuf field <code>map<string, .grpc.health.v1.HealthCheckResponse> statuses = 1 [json_name = "statuses"];</code>
     * @return \Google\Protobuf\Internal\MapField
     */
    public function getStatuses()
    {
        return $this->statuses;
    }

    /**
     * statuses contains all the services and their respective status.
     *
     * Generated from protobuf field <code>map<string, .grpc.health.v1.HealthCheckResponse> statuses = 1 [json_name = "statuses"];</code>
     * @param array|\Google\Protobuf\Internal\MapField $var
     * @return $this
     */
    public function setStatuses($var)
    {
        $arr = GPBUtil::checkMapField($var, \Google\Protobuf\Internal\GPBType::STRING, \Google\Protobuf\Internal\GPBType::MESSAGE, \Grpc\Health\V1\HealthCheckResponse::class);
        $this->statuses = $arr;

        return $this;
    }

}

