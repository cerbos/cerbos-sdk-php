<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: cerbos/cloud/store/v1/store.proto

namespace Cerbos\Cloud\Store\V1\FileError;

use UnexpectedValueException;

/**
 * Protobuf type <code>cerbos.cloud.store.v1.FileError.Cause</code>
 */
class Cause
{
    /**
     * Generated from protobuf enum <code>CAUSE_UNSPECIFIED = 0;</code>
     */
    const CAUSE_UNSPECIFIED = 0;
    /**
     * Generated from protobuf enum <code>CAUSE_INVALID_FILE_PATH = 1;</code>
     */
    const CAUSE_INVALID_FILE_PATH = 1;
    /**
     * Generated from protobuf enum <code>CAUSE_UNSUPPORTED_FILE_EXTENSION = 2;</code>
     */
    const CAUSE_UNSUPPORTED_FILE_EXTENSION = 2;
    /**
     * Generated from protobuf enum <code>CAUSE_INVALID_FILE_CONTENTS = 3;</code>
     */
    const CAUSE_INVALID_FILE_CONTENTS = 3;
    /**
     * Generated from protobuf enum <code>CAUSE_DUPLICATE_FILE_PATH = 4;</code>
     */
    const CAUSE_DUPLICATE_FILE_PATH = 4;
    /**
     * Generated from protobuf enum <code>CAUSE_FILE_TOO_LARGE = 5;</code>
     */
    const CAUSE_FILE_TOO_LARGE = 5;

    private static $valueToName = [
        self::CAUSE_UNSPECIFIED => 'CAUSE_UNSPECIFIED',
        self::CAUSE_INVALID_FILE_PATH => 'CAUSE_INVALID_FILE_PATH',
        self::CAUSE_UNSUPPORTED_FILE_EXTENSION => 'CAUSE_UNSUPPORTED_FILE_EXTENSION',
        self::CAUSE_INVALID_FILE_CONTENTS => 'CAUSE_INVALID_FILE_CONTENTS',
        self::CAUSE_DUPLICATE_FILE_PATH => 'CAUSE_DUPLICATE_FILE_PATH',
        self::CAUSE_FILE_TOO_LARGE => 'CAUSE_FILE_TOO_LARGE',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

