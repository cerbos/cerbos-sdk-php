<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: cerbos/telemetry/v1/telemetry.proto

namespace Cerbos\Telemetry\V1\ServerLaunch\Stats;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>cerbos.telemetry.v1.ServerLaunch.Stats.Policy</code>
 */
class Policy extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>map<string, uint32> count = 1 [json_name = "count"];</code>
     */
    private $count;
    /**
     * Generated from protobuf field <code>map<string, double> avg_rule_count = 2 [json_name = "avgRuleCount"];</code>
     */
    private $avg_rule_count;
    /**
     * Generated from protobuf field <code>map<string, double> avg_condition_count = 3 [json_name = "avgConditionCount"];</code>
     */
    private $avg_condition_count;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type array|\Google\Protobuf\Internal\MapField $count
     *     @type array|\Google\Protobuf\Internal\MapField $avg_rule_count
     *     @type array|\Google\Protobuf\Internal\MapField $avg_condition_count
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Cerbos\Telemetry\V1\Telemetry::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>map<string, uint32> count = 1 [json_name = "count"];</code>
     * @return \Google\Protobuf\Internal\MapField
     */
    public function getCount()
    {
        return $this->count;
    }

    /**
     * Generated from protobuf field <code>map<string, uint32> count = 1 [json_name = "count"];</code>
     * @param array|\Google\Protobuf\Internal\MapField $var
     * @return $this
     */
    public function setCount($var)
    {
        $arr = GPBUtil::checkMapField($var, \Google\Protobuf\Internal\GPBType::STRING, \Google\Protobuf\Internal\GPBType::UINT32);
        $this->count = $arr;

        return $this;
    }

    /**
     * Generated from protobuf field <code>map<string, double> avg_rule_count = 2 [json_name = "avgRuleCount"];</code>
     * @return \Google\Protobuf\Internal\MapField
     */
    public function getAvgRuleCount()
    {
        return $this->avg_rule_count;
    }

    /**
     * Generated from protobuf field <code>map<string, double> avg_rule_count = 2 [json_name = "avgRuleCount"];</code>
     * @param array|\Google\Protobuf\Internal\MapField $var
     * @return $this
     */
    public function setAvgRuleCount($var)
    {
        $arr = GPBUtil::checkMapField($var, \Google\Protobuf\Internal\GPBType::STRING, \Google\Protobuf\Internal\GPBType::DOUBLE);
        $this->avg_rule_count = $arr;

        return $this;
    }

    /**
     * Generated from protobuf field <code>map<string, double> avg_condition_count = 3 [json_name = "avgConditionCount"];</code>
     * @return \Google\Protobuf\Internal\MapField
     */
    public function getAvgConditionCount()
    {
        return $this->avg_condition_count;
    }

    /**
     * Generated from protobuf field <code>map<string, double> avg_condition_count = 3 [json_name = "avgConditionCount"];</code>
     * @param array|\Google\Protobuf\Internal\MapField $var
     * @return $this
     */
    public function setAvgConditionCount($var)
    {
        $arr = GPBUtil::checkMapField($var, \Google\Protobuf\Internal\GPBType::STRING, \Google\Protobuf\Internal\GPBType::DOUBLE);
        $this->avg_condition_count = $arr;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Policy::class, \Cerbos\Telemetry\V1\ServerLaunch_Stats_Policy::class);

