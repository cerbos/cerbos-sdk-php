<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: cerbos/telemetry/v1/telemetry.proto

namespace Cerbos\Telemetry\V1\ServerLaunch\Features;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\GPBUtil;
use Google\Protobuf\RepeatedField;

/**
 * Generated from protobuf message <code>cerbos.telemetry.v1.ServerLaunch.Features.Storage</code>
 */
class Storage extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string driver = 1 [json_name = "driver"];</code>
     */
    protected $driver = '';
    protected $store;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $driver
     *     @type \Cerbos\Telemetry\V1\ServerLaunch\Features\Storage\Disk $disk
     *     @type \Cerbos\Telemetry\V1\ServerLaunch\Features\Storage\Git $git
     *     @type \Cerbos\Telemetry\V1\ServerLaunch\Features\Storage\Blob $blob
     *     @type \Cerbos\Telemetry\V1\ServerLaunch\Features\Storage\Bundle $bundle
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Cerbos\Telemetry\V1\Telemetry::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string driver = 1 [json_name = "driver"];</code>
     * @return string
     */
    public function getDriver()
    {
        return $this->driver;
    }

    /**
     * Generated from protobuf field <code>string driver = 1 [json_name = "driver"];</code>
     * @param string $var
     * @return $this
     */
    public function setDriver($var)
    {
        GPBUtil::checkString($var, True);
        $this->driver = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.cerbos.telemetry.v1.ServerLaunch.Features.Storage.Disk disk = 2 [json_name = "disk"];</code>
     * @return \Cerbos\Telemetry\V1\ServerLaunch\Features\Storage\Disk|null
     */
    public function getDisk()
    {
        return $this->readOneof(2);
    }

    public function hasDisk()
    {
        return $this->hasOneof(2);
    }

    /**
     * Generated from protobuf field <code>.cerbos.telemetry.v1.ServerLaunch.Features.Storage.Disk disk = 2 [json_name = "disk"];</code>
     * @param \Cerbos\Telemetry\V1\ServerLaunch\Features\Storage\Disk $var
     * @return $this
     */
    public function setDisk($var)
    {
        GPBUtil::checkMessage($var, \Cerbos\Telemetry\V1\ServerLaunch\Features\Storage\Disk::class);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.cerbos.telemetry.v1.ServerLaunch.Features.Storage.Git git = 3 [json_name = "git"];</code>
     * @return \Cerbos\Telemetry\V1\ServerLaunch\Features\Storage\Git|null
     */
    public function getGit()
    {
        return $this->readOneof(3);
    }

    public function hasGit()
    {
        return $this->hasOneof(3);
    }

    /**
     * Generated from protobuf field <code>.cerbos.telemetry.v1.ServerLaunch.Features.Storage.Git git = 3 [json_name = "git"];</code>
     * @param \Cerbos\Telemetry\V1\ServerLaunch\Features\Storage\Git $var
     * @return $this
     */
    public function setGit($var)
    {
        GPBUtil::checkMessage($var, \Cerbos\Telemetry\V1\ServerLaunch\Features\Storage\Git::class);
        $this->writeOneof(3, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.cerbos.telemetry.v1.ServerLaunch.Features.Storage.Blob blob = 4 [json_name = "blob"];</code>
     * @return \Cerbos\Telemetry\V1\ServerLaunch\Features\Storage\Blob|null
     */
    public function getBlob()
    {
        return $this->readOneof(4);
    }

    public function hasBlob()
    {
        return $this->hasOneof(4);
    }

    /**
     * Generated from protobuf field <code>.cerbos.telemetry.v1.ServerLaunch.Features.Storage.Blob blob = 4 [json_name = "blob"];</code>
     * @param \Cerbos\Telemetry\V1\ServerLaunch\Features\Storage\Blob $var
     * @return $this
     */
    public function setBlob($var)
    {
        GPBUtil::checkMessage($var, \Cerbos\Telemetry\V1\ServerLaunch\Features\Storage\Blob::class);
        $this->writeOneof(4, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.cerbos.telemetry.v1.ServerLaunch.Features.Storage.Bundle bundle = 5 [json_name = "bundle"];</code>
     * @return \Cerbos\Telemetry\V1\ServerLaunch\Features\Storage\Bundle|null
     */
    public function getBundle()
    {
        return $this->readOneof(5);
    }

    public function hasBundle()
    {
        return $this->hasOneof(5);
    }

    /**
     * Generated from protobuf field <code>.cerbos.telemetry.v1.ServerLaunch.Features.Storage.Bundle bundle = 5 [json_name = "bundle"];</code>
     * @param \Cerbos\Telemetry\V1\ServerLaunch\Features\Storage\Bundle $var
     * @return $this
     */
    public function setBundle($var)
    {
        GPBUtil::checkMessage($var, \Cerbos\Telemetry\V1\ServerLaunch\Features\Storage\Bundle::class);
        $this->writeOneof(5, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getStore()
    {
        return $this->whichOneof("store");
    }

}

