<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: cerbos/telemetry/v1/telemetry.proto

namespace Cerbos\Telemetry\V1\ServerLaunch\Features;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>cerbos.telemetry.v1.ServerLaunch.Features.Audit</code>
 */
class Audit extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>bool enabled = 1 [json_name = "enabled"];</code>
     */
    protected $enabled = false;
    /**
     * Generated from protobuf field <code>string backend = 2 [json_name = "backend"];</code>
     */
    protected $backend = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type bool $enabled
     *     @type string $backend
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Cerbos\Telemetry\V1\Telemetry::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>bool enabled = 1 [json_name = "enabled"];</code>
     * @return bool
     */
    public function getEnabled()
    {
        return $this->enabled;
    }

    /**
     * Generated from protobuf field <code>bool enabled = 1 [json_name = "enabled"];</code>
     * @param bool $var
     * @return $this
     */
    public function setEnabled($var)
    {
        GPBUtil::checkBool($var);
        $this->enabled = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string backend = 2 [json_name = "backend"];</code>
     * @return string
     */
    public function getBackend()
    {
        return $this->backend;
    }

    /**
     * Generated from protobuf field <code>string backend = 2 [json_name = "backend"];</code>
     * @param string $var
     * @return $this
     */
    public function setBackend($var)
    {
        GPBUtil::checkString($var, True);
        $this->backend = $var;

        return $this;
    }

}

