<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: cerbos/telemetry/v1/telemetry.proto

namespace Cerbos\Telemetry\V1\ServerLaunch;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>cerbos.telemetry.v1.ServerLaunch.Features</code>
 */
class Features extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.cerbos.telemetry.v1.ServerLaunch.Features.Audit audit = 1 [json_name = "audit"];</code>
     */
    protected $audit = null;
    /**
     * Generated from protobuf field <code>.cerbos.telemetry.v1.ServerLaunch.Features.Schema schema = 2 [json_name = "schema"];</code>
     */
    protected $schema = null;
    /**
     * Generated from protobuf field <code>.cerbos.telemetry.v1.ServerLaunch.Features.AdminApi admin_api = 3 [json_name = "adminApi"];</code>
     */
    protected $admin_api = null;
    /**
     * Generated from protobuf field <code>.cerbos.telemetry.v1.ServerLaunch.Features.Storage storage = 4 [json_name = "storage"];</code>
     */
    protected $storage = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Cerbos\Telemetry\V1\ServerLaunch\Features\Audit $audit
     *     @type \Cerbos\Telemetry\V1\ServerLaunch\Features\Schema $schema
     *     @type \Cerbos\Telemetry\V1\ServerLaunch\Features\AdminApi $admin_api
     *     @type \Cerbos\Telemetry\V1\ServerLaunch\Features\Storage $storage
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Cerbos\Telemetry\V1\Telemetry::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.cerbos.telemetry.v1.ServerLaunch.Features.Audit audit = 1 [json_name = "audit"];</code>
     * @return \Cerbos\Telemetry\V1\ServerLaunch\Features\Audit|null
     */
    public function getAudit()
    {
        return $this->audit;
    }

    public function hasAudit()
    {
        return isset($this->audit);
    }

    public function clearAudit()
    {
        unset($this->audit);
    }

    /**
     * Generated from protobuf field <code>.cerbos.telemetry.v1.ServerLaunch.Features.Audit audit = 1 [json_name = "audit"];</code>
     * @param \Cerbos\Telemetry\V1\ServerLaunch\Features\Audit $var
     * @return $this
     */
    public function setAudit($var)
    {
        GPBUtil::checkMessage($var, \Cerbos\Telemetry\V1\ServerLaunch\Features\Audit::class);
        $this->audit = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.cerbos.telemetry.v1.ServerLaunch.Features.Schema schema = 2 [json_name = "schema"];</code>
     * @return \Cerbos\Telemetry\V1\ServerLaunch\Features\Schema|null
     */
    public function getSchema()
    {
        return $this->schema;
    }

    public function hasSchema()
    {
        return isset($this->schema);
    }

    public function clearSchema()
    {
        unset($this->schema);
    }

    /**
     * Generated from protobuf field <code>.cerbos.telemetry.v1.ServerLaunch.Features.Schema schema = 2 [json_name = "schema"];</code>
     * @param \Cerbos\Telemetry\V1\ServerLaunch\Features\Schema $var
     * @return $this
     */
    public function setSchema($var)
    {
        GPBUtil::checkMessage($var, \Cerbos\Telemetry\V1\ServerLaunch\Features\Schema::class);
        $this->schema = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.cerbos.telemetry.v1.ServerLaunch.Features.AdminApi admin_api = 3 [json_name = "adminApi"];</code>
     * @return \Cerbos\Telemetry\V1\ServerLaunch\Features\AdminApi|null
     */
    public function getAdminApi()
    {
        return $this->admin_api;
    }

    public function hasAdminApi()
    {
        return isset($this->admin_api);
    }

    public function clearAdminApi()
    {
        unset($this->admin_api);
    }

    /**
     * Generated from protobuf field <code>.cerbos.telemetry.v1.ServerLaunch.Features.AdminApi admin_api = 3 [json_name = "adminApi"];</code>
     * @param \Cerbos\Telemetry\V1\ServerLaunch\Features\AdminApi $var
     * @return $this
     */
    public function setAdminApi($var)
    {
        GPBUtil::checkMessage($var, \Cerbos\Telemetry\V1\ServerLaunch\Features\AdminApi::class);
        $this->admin_api = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.cerbos.telemetry.v1.ServerLaunch.Features.Storage storage = 4 [json_name = "storage"];</code>
     * @return \Cerbos\Telemetry\V1\ServerLaunch\Features\Storage|null
     */
    public function getStorage()
    {
        return $this->storage;
    }

    public function hasStorage()
    {
        return isset($this->storage);
    }

    public function clearStorage()
    {
        unset($this->storage);
    }

    /**
     * Generated from protobuf field <code>.cerbos.telemetry.v1.ServerLaunch.Features.Storage storage = 4 [json_name = "storage"];</code>
     * @param \Cerbos\Telemetry\V1\ServerLaunch\Features\Storage $var
     * @return $this
     */
    public function setStorage($var)
    {
        GPBUtil::checkMessage($var, \Cerbos\Telemetry\V1\ServerLaunch\Features\Storage::class);
        $this->storage = $var;

        return $this;
    }

}

