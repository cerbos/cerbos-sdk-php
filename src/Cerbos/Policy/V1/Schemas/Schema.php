<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: cerbos/policy/v1/policy.proto

namespace Cerbos\Policy\V1\Schemas;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>cerbos.policy.v1.Schemas.Schema</code>
 */
class Schema extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string ref = 1 [json_name = "ref", (.buf.validate.field) = {</code>
     */
    protected $ref = '';
    /**
     * Generated from protobuf field <code>.cerbos.policy.v1.Schemas.IgnoreWhen ignore_when = 2 [json_name = "ignoreWhen"];</code>
     */
    protected $ignore_when = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $ref
     *     @type \Cerbos\Policy\V1\Schemas\IgnoreWhen $ignore_when
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Cerbos\Policy\V1\Policy::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string ref = 1 [json_name = "ref", (.buf.validate.field) = {</code>
     * @return string
     */
    public function getRef()
    {
        return $this->ref;
    }

    /**
     * Generated from protobuf field <code>string ref = 1 [json_name = "ref", (.buf.validate.field) = {</code>
     * @param string $var
     * @return $this
     */
    public function setRef($var)
    {
        GPBUtil::checkString($var, True);
        $this->ref = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.cerbos.policy.v1.Schemas.IgnoreWhen ignore_when = 2 [json_name = "ignoreWhen"];</code>
     * @return \Cerbos\Policy\V1\Schemas\IgnoreWhen|null
     */
    public function getIgnoreWhen()
    {
        return $this->ignore_when;
    }

    public function hasIgnoreWhen()
    {
        return isset($this->ignore_when);
    }

    public function clearIgnoreWhen()
    {
        unset($this->ignore_when);
    }

    /**
     * Generated from protobuf field <code>.cerbos.policy.v1.Schemas.IgnoreWhen ignore_when = 2 [json_name = "ignoreWhen"];</code>
     * @param \Cerbos\Policy\V1\Schemas\IgnoreWhen $var
     * @return $this
     */
    public function setIgnoreWhen($var)
    {
        GPBUtil::checkMessage($var, \Cerbos\Policy\V1\Schemas\IgnoreWhen::class);
        $this->ignore_when = $var;

        return $this;
    }

}

