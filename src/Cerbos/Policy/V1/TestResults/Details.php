<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: cerbos/policy/v1/policy.proto

namespace Cerbos\Policy\V1\TestResults;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\GPBUtil;
use Google\Protobuf\RepeatedField;

/**
 * Generated from protobuf message <code>cerbos.policy.v1.TestResults.Details</code>
 */
class Details extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.cerbos.policy.v1.TestResults.Result result = 1 [json_name = "result"];</code>
     */
    protected $result = 0;
    /**
     * Generated from protobuf field <code>repeated .cerbos.engine.v1.Trace engine_trace = 4 [json_name = "engineTrace"];</code>
     */
    private $engine_trace;
    protected $outcome;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $result
     *     @type \Cerbos\Policy\V1\TestResults\Failure $failure
     *     @type string $error
     *     @type \Cerbos\Policy\V1\TestResults\Success $success
     *     @type string $skip_reason
     *     @type \Cerbos\Engine\V1\Trace[] $engine_trace
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Cerbos\Policy\V1\Policy::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.cerbos.policy.v1.TestResults.Result result = 1 [json_name = "result"];</code>
     * @return int
     */
    public function getResult()
    {
        return $this->result;
    }

    /**
     * Generated from protobuf field <code>.cerbos.policy.v1.TestResults.Result result = 1 [json_name = "result"];</code>
     * @param int $var
     * @return $this
     */
    public function setResult($var)
    {
        GPBUtil::checkEnum($var, \Cerbos\Policy\V1\TestResults\Result::class);
        $this->result = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.cerbos.policy.v1.TestResults.Failure failure = 2 [json_name = "failure"];</code>
     * @return \Cerbos\Policy\V1\TestResults\Failure|null
     */
    public function getFailure()
    {
        return $this->readOneof(2);
    }

    public function hasFailure()
    {
        return $this->hasOneof(2);
    }

    /**
     * Generated from protobuf field <code>.cerbos.policy.v1.TestResults.Failure failure = 2 [json_name = "failure"];</code>
     * @param \Cerbos\Policy\V1\TestResults\Failure $var
     * @return $this
     */
    public function setFailure($var)
    {
        GPBUtil::checkMessage($var, \Cerbos\Policy\V1\TestResults\Failure::class);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>string error = 3 [json_name = "error"];</code>
     * @return string
     */
    public function getError()
    {
        return $this->readOneof(3);
    }

    public function hasError()
    {
        return $this->hasOneof(3);
    }

    /**
     * Generated from protobuf field <code>string error = 3 [json_name = "error"];</code>
     * @param string $var
     * @return $this
     */
    public function setError($var)
    {
        GPBUtil::checkString($var, True);
        $this->writeOneof(3, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.cerbos.policy.v1.TestResults.Success success = 5 [json_name = "success"];</code>
     * @return \Cerbos\Policy\V1\TestResults\Success|null
     */
    public function getSuccess()
    {
        return $this->readOneof(5);
    }

    public function hasSuccess()
    {
        return $this->hasOneof(5);
    }

    /**
     * Generated from protobuf field <code>.cerbos.policy.v1.TestResults.Success success = 5 [json_name = "success"];</code>
     * @param \Cerbos\Policy\V1\TestResults\Success $var
     * @return $this
     */
    public function setSuccess($var)
    {
        GPBUtil::checkMessage($var, \Cerbos\Policy\V1\TestResults\Success::class);
        $this->writeOneof(5, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>string skip_reason = 6 [json_name = "skipReason"];</code>
     * @return string
     */
    public function getSkipReason()
    {
        return $this->readOneof(6);
    }

    public function hasSkipReason()
    {
        return $this->hasOneof(6);
    }

    /**
     * Generated from protobuf field <code>string skip_reason = 6 [json_name = "skipReason"];</code>
     * @param string $var
     * @return $this
     */
    public function setSkipReason($var)
    {
        GPBUtil::checkString($var, True);
        $this->writeOneof(6, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>repeated .cerbos.engine.v1.Trace engine_trace = 4 [json_name = "engineTrace"];</code>
     * @return RepeatedField<\Cerbos\Engine\V1\Trace>
     */
    public function getEngineTrace()
    {
        return $this->engine_trace;
    }

    /**
     * Generated from protobuf field <code>repeated .cerbos.engine.v1.Trace engine_trace = 4 [json_name = "engineTrace"];</code>
     * @param \Cerbos\Engine\V1\Trace[] $var
     * @return $this
     */
    public function setEngineTrace($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Cerbos\Engine\V1\Trace::class);
        $this->engine_trace = $arr;

        return $this;
    }

    /**
     * @return string
     */
    public function getOutcome()
    {
        return $this->whichOneof("outcome");
    }

}

