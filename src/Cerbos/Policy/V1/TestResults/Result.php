<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: cerbos/policy/v1/policy.proto

namespace Cerbos\Policy\V1\TestResults;

use UnexpectedValueException;

/**
 * Protobuf type <code>cerbos.policy.v1.TestResults.Result</code>
 */
class Result
{
    /**
     * Generated from protobuf enum <code>RESULT_UNSPECIFIED = 0;</code>
     */
    const RESULT_UNSPECIFIED = 0;
    /**
     * Generated from protobuf enum <code>RESULT_SKIPPED = 1;</code>
     */
    const RESULT_SKIPPED = 1;
    /**
     * Generated from protobuf enum <code>RESULT_PASSED = 2;</code>
     */
    const RESULT_PASSED = 2;
    /**
     * Generated from protobuf enum <code>RESULT_FAILED = 3;</code>
     */
    const RESULT_FAILED = 3;
    /**
     * Generated from protobuf enum <code>RESULT_ERRORED = 4;</code>
     */
    const RESULT_ERRORED = 4;

    private static $valueToName = [
        self::RESULT_UNSPECIFIED => 'RESULT_UNSPECIFIED',
        self::RESULT_SKIPPED => 'RESULT_SKIPPED',
        self::RESULT_PASSED => 'RESULT_PASSED',
        self::RESULT_FAILED => 'RESULT_FAILED',
        self::RESULT_ERRORED => 'RESULT_ERRORED',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

