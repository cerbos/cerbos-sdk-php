<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: cerbos/policy/v1/policy.proto

namespace Cerbos\Policy\V1\TestResults;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>cerbos.policy.v1.TestResults.Failure</code>
 */
class Failure extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.cerbos.effect.v1.Effect expected = 1 [json_name = "expected"];</code>
     */
    protected $expected = 0;
    /**
     * Generated from protobuf field <code>.cerbos.effect.v1.Effect actual = 2 [json_name = "actual"];</code>
     */
    protected $actual = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $expected
     *     @type int $actual
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Cerbos\Policy\V1\Policy::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.cerbos.effect.v1.Effect expected = 1 [json_name = "expected"];</code>
     * @return int
     */
    public function getExpected()
    {
        return $this->expected;
    }

    /**
     * Generated from protobuf field <code>.cerbos.effect.v1.Effect expected = 1 [json_name = "expected"];</code>
     * @param int $var
     * @return $this
     */
    public function setExpected($var)
    {
        GPBUtil::checkEnum($var, \Cerbos\Effect\V1\Effect::class);
        $this->expected = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.cerbos.effect.v1.Effect actual = 2 [json_name = "actual"];</code>
     * @return int
     */
    public function getActual()
    {
        return $this->actual;
    }

    /**
     * Generated from protobuf field <code>.cerbos.effect.v1.Effect actual = 2 [json_name = "actual"];</code>
     * @param int $var
     * @return $this
     */
    public function setActual($var)
    {
        GPBUtil::checkEnum($var, \Cerbos\Effect\V1\Effect::class);
        $this->actual = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Failure::class, \Cerbos\Policy\V1\TestResults_Failure::class);

