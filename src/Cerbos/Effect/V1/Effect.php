<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: cerbos/effect/v1/effect.proto

namespace Cerbos\Effect\V1;

use UnexpectedValueException;

/**
 * Protobuf type <code>cerbos.effect.v1.Effect</code>
 */
class Effect
{
    /**
     * Generated from protobuf enum <code>EFFECT_UNSPECIFIED = 0;</code>
     */
    const EFFECT_UNSPECIFIED = 0;
    /**
     * Generated from protobuf enum <code>EFFECT_ALLOW = 1;</code>
     */
    const EFFECT_ALLOW = 1;
    /**
     * Generated from protobuf enum <code>EFFECT_DENY = 2;</code>
     */
    const EFFECT_DENY = 2;
    /**
     * Generated from protobuf enum <code>EFFECT_NO_MATCH = 3;</code>
     */
    const EFFECT_NO_MATCH = 3;

    private static $valueToName = [
        self::EFFECT_UNSPECIFIED => 'EFFECT_UNSPECIFIED',
        self::EFFECT_ALLOW => 'EFFECT_ALLOW',
        self::EFFECT_DENY => 'EFFECT_DENY',
        self::EFFECT_NO_MATCH => 'EFFECT_NO_MATCH',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

