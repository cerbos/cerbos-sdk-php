<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: cerbos/audit/v1/audit.proto

namespace Cerbos\Audit\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\GPBUtil;
use Google\Protobuf\RepeatedField;

/**
 * Generated from protobuf message <code>cerbos.audit.v1.PolicySource</code>
 */
class PolicySource extends \Google\Protobuf\Internal\Message
{
    protected $source;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Cerbos\Audit\V1\PolicySource\Blob $blob
     *     @type \Cerbos\Audit\V1\PolicySource\Database $database
     *     @type \Cerbos\Audit\V1\PolicySource\Disk $disk
     *     @type \Cerbos\Audit\V1\PolicySource\Git $git
     *     @type \Cerbos\Audit\V1\PolicySource\Hub $hub
     *     @type \Cerbos\Audit\V1\PolicySource\EmbeddedPDP $embedded_pdp
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Cerbos\Audit\V1\Audit::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.cerbos.audit.v1.PolicySource.Blob blob = 1 [json_name = "blob"];</code>
     * @return \Cerbos\Audit\V1\PolicySource\Blob|null
     */
    public function getBlob()
    {
        return $this->readOneof(1);
    }

    public function hasBlob()
    {
        return $this->hasOneof(1);
    }

    /**
     * Generated from protobuf field <code>.cerbos.audit.v1.PolicySource.Blob blob = 1 [json_name = "blob"];</code>
     * @param \Cerbos\Audit\V1\PolicySource\Blob $var
     * @return $this
     */
    public function setBlob($var)
    {
        GPBUtil::checkMessage($var, \Cerbos\Audit\V1\PolicySource\Blob::class);
        $this->writeOneof(1, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.cerbos.audit.v1.PolicySource.Database database = 2 [json_name = "database"];</code>
     * @return \Cerbos\Audit\V1\PolicySource\Database|null
     */
    public function getDatabase()
    {
        return $this->readOneof(2);
    }

    public function hasDatabase()
    {
        return $this->hasOneof(2);
    }

    /**
     * Generated from protobuf field <code>.cerbos.audit.v1.PolicySource.Database database = 2 [json_name = "database"];</code>
     * @param \Cerbos\Audit\V1\PolicySource\Database $var
     * @return $this
     */
    public function setDatabase($var)
    {
        GPBUtil::checkMessage($var, \Cerbos\Audit\V1\PolicySource\Database::class);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.cerbos.audit.v1.PolicySource.Disk disk = 3 [json_name = "disk"];</code>
     * @return \Cerbos\Audit\V1\PolicySource\Disk|null
     */
    public function getDisk()
    {
        return $this->readOneof(3);
    }

    public function hasDisk()
    {
        return $this->hasOneof(3);
    }

    /**
     * Generated from protobuf field <code>.cerbos.audit.v1.PolicySource.Disk disk = 3 [json_name = "disk"];</code>
     * @param \Cerbos\Audit\V1\PolicySource\Disk $var
     * @return $this
     */
    public function setDisk($var)
    {
        GPBUtil::checkMessage($var, \Cerbos\Audit\V1\PolicySource\Disk::class);
        $this->writeOneof(3, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.cerbos.audit.v1.PolicySource.Git git = 4 [json_name = "git"];</code>
     * @return \Cerbos\Audit\V1\PolicySource\Git|null
     */
    public function getGit()
    {
        return $this->readOneof(4);
    }

    public function hasGit()
    {
        return $this->hasOneof(4);
    }

    /**
     * Generated from protobuf field <code>.cerbos.audit.v1.PolicySource.Git git = 4 [json_name = "git"];</code>
     * @param \Cerbos\Audit\V1\PolicySource\Git $var
     * @return $this
     */
    public function setGit($var)
    {
        GPBUtil::checkMessage($var, \Cerbos\Audit\V1\PolicySource\Git::class);
        $this->writeOneof(4, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.cerbos.audit.v1.PolicySource.Hub hub = 5 [json_name = "hub"];</code>
     * @return \Cerbos\Audit\V1\PolicySource\Hub|null
     */
    public function getHub()
    {
        return $this->readOneof(5);
    }

    public function hasHub()
    {
        return $this->hasOneof(5);
    }

    /**
     * Generated from protobuf field <code>.cerbos.audit.v1.PolicySource.Hub hub = 5 [json_name = "hub"];</code>
     * @param \Cerbos\Audit\V1\PolicySource\Hub $var
     * @return $this
     */
    public function setHub($var)
    {
        GPBUtil::checkMessage($var, \Cerbos\Audit\V1\PolicySource\Hub::class);
        $this->writeOneof(5, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.cerbos.audit.v1.PolicySource.EmbeddedPDP embedded_pdp = 6 [json_name = "embeddedPdp"];</code>
     * @return \Cerbos\Audit\V1\PolicySource\EmbeddedPDP|null
     */
    public function getEmbeddedPdp()
    {
        return $this->readOneof(6);
    }

    public function hasEmbeddedPdp()
    {
        return $this->hasOneof(6);
    }

    /**
     * Generated from protobuf field <code>.cerbos.audit.v1.PolicySource.EmbeddedPDP embedded_pdp = 6 [json_name = "embeddedPdp"];</code>
     * @param \Cerbos\Audit\V1\PolicySource\EmbeddedPDP $var
     * @return $this
     */
    public function setEmbeddedPdp($var)
    {
        GPBUtil::checkMessage($var, \Cerbos\Audit\V1\PolicySource\EmbeddedPDP::class);
        $this->writeOneof(6, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getSource()
    {
        return $this->whichOneof("source");
    }

}

