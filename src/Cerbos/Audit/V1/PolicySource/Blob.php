<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: cerbos/audit/v1/audit.proto

namespace Cerbos\Audit\V1\PolicySource;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\GPBUtil;
use Google\Protobuf\RepeatedField;

/**
 * Generated from protobuf message <code>cerbos.audit.v1.PolicySource.Blob</code>
 */
class Blob extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string bucket_url = 1 [json_name = "bucketUrl"];</code>
     */
    protected $bucket_url = '';
    /**
     * Generated from protobuf field <code>string prefix = 2 [json_name = "prefix"];</code>
     */
    protected $prefix = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $bucket_url
     *     @type string $prefix
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Cerbos\Audit\V1\Audit::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string bucket_url = 1 [json_name = "bucketUrl"];</code>
     * @return string
     */
    public function getBucketUrl()
    {
        return $this->bucket_url;
    }

    /**
     * Generated from protobuf field <code>string bucket_url = 1 [json_name = "bucketUrl"];</code>
     * @param string $var
     * @return $this
     */
    public function setBucketUrl($var)
    {
        GPBUtil::checkString($var, True);
        $this->bucket_url = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string prefix = 2 [json_name = "prefix"];</code>
     * @return string
     */
    public function getPrefix()
    {
        return $this->prefix;
    }

    /**
     * Generated from protobuf field <code>string prefix = 2 [json_name = "prefix"];</code>
     * @param string $var
     * @return $this
     */
    public function setPrefix($var)
    {
        GPBUtil::checkString($var, True);
        $this->prefix = $var;

        return $this;
    }

}

