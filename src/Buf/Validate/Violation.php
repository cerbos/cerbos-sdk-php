<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: buf/validate/expression.proto

namespace Buf\Validate;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * `Violation` represents a single instance where a validation rule, expressed
 * as a `Constraint`, was not met. It provides information about the field that
 * caused the violation, the specific constraint that wasn't fulfilled, and a
 * human-readable error message.
 * ```json
 * {
 *   "fieldPath": "bar",
 *   "constraintId": "foo.bar",
 *   "message": "bar must be greater than 0"
 * }
 * ```
 *
 * Generated from protobuf message <code>buf.validate.Violation</code>
 */
class Violation extends \Google\Protobuf\Internal\Message
{
    /**
     * `field_path` is a machine-readable identifier that points to the specific field that failed the validation.
     * This could be a nested field, in which case the path will include all the parent fields leading to the actual field that caused the violation.
     *
     * Generated from protobuf field <code>string field_path = 1 [json_name = "fieldPath"];</code>
     */
    protected $field_path = '';
    /**
     * `constraint_id` is the unique identifier of the `Constraint` that was not fulfilled.
     * This is the same `id` that was specified in the `Constraint` message, allowing easy tracing of which rule was violated.
     *
     * Generated from protobuf field <code>string constraint_id = 2 [json_name = "constraintId"];</code>
     */
    protected $constraint_id = '';
    /**
     * `message` is a human-readable error message that describes the nature of the violation.
     * This can be the default error message from the violated `Constraint`, or it can be a custom message that gives more context about the violation.
     *
     * Generated from protobuf field <code>string message = 3 [json_name = "message"];</code>
     */
    protected $message = '';
    /**
     * `for_key` indicates whether the violation was caused by a map key, rather than a value.
     *
     * Generated from protobuf field <code>bool for_key = 4 [json_name = "forKey"];</code>
     */
    protected $for_key = false;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $field_path
     *           `field_path` is a machine-readable identifier that points to the specific field that failed the validation.
     *           This could be a nested field, in which case the path will include all the parent fields leading to the actual field that caused the violation.
     *     @type string $constraint_id
     *           `constraint_id` is the unique identifier of the `Constraint` that was not fulfilled.
     *           This is the same `id` that was specified in the `Constraint` message, allowing easy tracing of which rule was violated.
     *     @type string $message
     *           `message` is a human-readable error message that describes the nature of the violation.
     *           This can be the default error message from the violated `Constraint`, or it can be a custom message that gives more context about the violation.
     *     @type bool $for_key
     *           `for_key` indicates whether the violation was caused by a map key, rather than a value.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Buf\Validate\Expression::initOnce();
        parent::__construct($data);
    }

    /**
     * `field_path` is a machine-readable identifier that points to the specific field that failed the validation.
     * This could be a nested field, in which case the path will include all the parent fields leading to the actual field that caused the violation.
     *
     * Generated from protobuf field <code>string field_path = 1 [json_name = "fieldPath"];</code>
     * @return string
     */
    public function getFieldPath()
    {
        return $this->field_path;
    }

    /**
     * `field_path` is a machine-readable identifier that points to the specific field that failed the validation.
     * This could be a nested field, in which case the path will include all the parent fields leading to the actual field that caused the violation.
     *
     * Generated from protobuf field <code>string field_path = 1 [json_name = "fieldPath"];</code>
     * @param string $var
     * @return $this
     */
    public function setFieldPath($var)
    {
        GPBUtil::checkString($var, True);
        $this->field_path = $var;

        return $this;
    }

    /**
     * `constraint_id` is the unique identifier of the `Constraint` that was not fulfilled.
     * This is the same `id` that was specified in the `Constraint` message, allowing easy tracing of which rule was violated.
     *
     * Generated from protobuf field <code>string constraint_id = 2 [json_name = "constraintId"];</code>
     * @return string
     */
    public function getConstraintId()
    {
        return $this->constraint_id;
    }

    /**
     * `constraint_id` is the unique identifier of the `Constraint` that was not fulfilled.
     * This is the same `id` that was specified in the `Constraint` message, allowing easy tracing of which rule was violated.
     *
     * Generated from protobuf field <code>string constraint_id = 2 [json_name = "constraintId"];</code>
     * @param string $var
     * @return $this
     */
    public function setConstraintId($var)
    {
        GPBUtil::checkString($var, True);
        $this->constraint_id = $var;

        return $this;
    }

    /**
     * `message` is a human-readable error message that describes the nature of the violation.
     * This can be the default error message from the violated `Constraint`, or it can be a custom message that gives more context about the violation.
     *
     * Generated from protobuf field <code>string message = 3 [json_name = "message"];</code>
     * @return string
     */
    public function getMessage()
    {
        return $this->message;
    }

    /**
     * `message` is a human-readable error message that describes the nature of the violation.
     * This can be the default error message from the violated `Constraint`, or it can be a custom message that gives more context about the violation.
     *
     * Generated from protobuf field <code>string message = 3 [json_name = "message"];</code>
     * @param string $var
     * @return $this
     */
    public function setMessage($var)
    {
        GPBUtil::checkString($var, True);
        $this->message = $var;

        return $this;
    }

    /**
     * `for_key` indicates whether the violation was caused by a map key, rather than a value.
     *
     * Generated from protobuf field <code>bool for_key = 4 [json_name = "forKey"];</code>
     * @return bool
     */
    public function getForKey()
    {
        return $this->for_key;
    }

    /**
     * `for_key` indicates whether the violation was caused by a map key, rather than a value.
     *
     * Generated from protobuf field <code>bool for_key = 4 [json_name = "forKey"];</code>
     * @param bool $var
     * @return $this
     */
    public function setForKey($var)
    {
        GPBUtil::checkBool($var);
        $this->for_key = $var;

        return $this;
    }

}

