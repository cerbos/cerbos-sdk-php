<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: buf/validate/validate.proto

namespace Buf\Validate;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * FloatRules describes the constraints applied to `float` values. These
 * rules may also be applied to the `google.protobuf.FloatValue` Well-Known-Type.
 *
 * Generated from protobuf message <code>buf.validate.FloatRules</code>
 */
class FloatRules extends \Google\Protobuf\Internal\Message
{
    /**
     * `const` requires the field value to exactly match the specified value. If
     * the field value doesn't match, an error message is generated.
     * ```proto
     * message MyFloat {
     *   // value must equal 42.0
     *   float value = 1 [(buf.validate.field).float.const = 42.0];
     * }
     * ```
     *
     * Generated from protobuf field <code>optional float const = 1 [json_name = "const", (.buf.validate.priv.field) = {</code>
     */
    protected $const = null;
    /**
     * `in` requires the field value to be equal to one of the specified values.
     * If the field value isn't one of the specified values, an error message
     * is generated.
     * ```proto
     * message MyFloat {
     *   // value must be in list [1.0, 2.0, 3.0]
     *   repeated float value = 1 (buf.validate.field).float = { in: [1.0, 2.0, 3.0] };
     * }
     * ```
     *
     * Generated from protobuf field <code>repeated float in = 6 [json_name = "in", (.buf.validate.priv.field) = {</code>
     */
    private $in;
    /**
     * `in` requires the field value to not be equal to any of the specified
     * values. If the field value is one of the specified values, an error
     * message is generated.
     * ```proto
     * message MyFloat {
     *   // value must not be in list [1.0, 2.0, 3.0]
     *   repeated float value = 1 (buf.validate.field).float = { not_in: [1.0, 2.0, 3.0] };
     * }
     * ```
     *
     * Generated from protobuf field <code>repeated float not_in = 7 [json_name = "notIn", (.buf.validate.priv.field) = {</code>
     */
    private $not_in;
    /**
     * `finite` requires the field value to be finite. If the field value is
     * infinite or NaN, an error message is generated.
     *
     * Generated from protobuf field <code>bool finite = 8 [json_name = "finite", (.buf.validate.priv.field) = {</code>
     */
    protected $finite = false;
    protected $less_than;
    protected $greater_than;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type float $const
     *           `const` requires the field value to exactly match the specified value. If
     *           the field value doesn't match, an error message is generated.
     *           ```proto
     *           message MyFloat {
     *             // value must equal 42.0
     *             float value = 1 [(buf.validate.field).float.const = 42.0];
     *           }
     *           ```
     *     @type float $lt
     *           `lt` requires the field value to be less than the specified value (field <
     *           value). If the field value is equal to or greater than the specified value,
     *           an error message is generated.
     *           ```proto
     *           message MyFloat {
     *             // value must be less than 10.0
     *             float value = 1 [(buf.validate.field).float.lt = 10.0];
     *           }
     *           ```
     *     @type float $lte
     *           `lte` requires the field value to be less than or equal to the specified
     *           value (field <= value). If the field value is greater than the specified
     *           value, an error message is generated.
     *           ```proto
     *           message MyFloat {
     *             // value must be less than or equal to 10.0
     *             float value = 1 [(buf.validate.field).float.lte = 10.0];
     *           }
     *           ```
     *     @type float $gt
     *           `gt` requires the field value to be greater than the specified value
     *           (exclusive). If the value of `gt` is larger than a specified `lt` or
     *           `lte`, the range is reversed, and the field value must be outside the
     *           specified range. If the field value doesn't meet the required conditions,
     *           an error message is generated.
     *           ```proto
     *           message MyFloat {
     *             // value must be greater than 5.0 [float.gt]
     *             float value = 1 [(buf.validate.field).float.gt = 5.0];
     *             // value must be greater than 5 and less than 10.0 [float.gt_lt]
     *             float other_value = 2 [(buf.validate.field).float = { gt: 5.0, lt: 10.0 }];
     *             // value must be greater than 10 or less than 5.0 [float.gt_lt_exclusive]
     *             float another_value = 3 [(buf.validate.field).float = { gt: 10.0, lt: 5.0 }];
     *           }
     *           ```
     *     @type float $gte
     *           `gte` requires the field value to be greater than or equal to the specified
     *           value (exclusive). If the value of `gte` is larger than a specified `lt`
     *           or `lte`, the range is reversed, and the field value must be outside the
     *           specified range. If the field value doesn't meet the required conditions,
     *           an error message is generated.
     *           ```proto
     *           message MyFloat {
     *             // value must be greater than or equal to 5.0 [float.gte]
     *             float value = 1 [(buf.validate.field).float.gte = 5.0];
     *             // value must be greater than or equal to 5.0 and less than 10.0 [float.gte_lt]
     *             float other_value = 2 [(buf.validate.field).float = { gte: 5.0, lt: 10.0 }];
     *             // value must be greater than or equal to 10.0 or less than 5.0 [float.gte_lt_exclusive]
     *             float another_value = 3 [(buf.validate.field).float = { gte: 10.0, lt: 5.0 }];
     *           }
     *           ```
     *     @type array<float>|\Google\Protobuf\Internal\RepeatedField $in
     *           `in` requires the field value to be equal to one of the specified values.
     *           If the field value isn't one of the specified values, an error message
     *           is generated.
     *           ```proto
     *           message MyFloat {
     *             // value must be in list [1.0, 2.0, 3.0]
     *             repeated float value = 1 (buf.validate.field).float = { in: [1.0, 2.0, 3.0] };
     *           }
     *           ```
     *     @type array<float>|\Google\Protobuf\Internal\RepeatedField $not_in
     *           `in` requires the field value to not be equal to any of the specified
     *           values. If the field value is one of the specified values, an error
     *           message is generated.
     *           ```proto
     *           message MyFloat {
     *             // value must not be in list [1.0, 2.0, 3.0]
     *             repeated float value = 1 (buf.validate.field).float = { not_in: [1.0, 2.0, 3.0] };
     *           }
     *           ```
     *     @type bool $finite
     *           `finite` requires the field value to be finite. If the field value is
     *           infinite or NaN, an error message is generated.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Buf\Validate\Validate::initOnce();
        parent::__construct($data);
    }

    /**
     * `const` requires the field value to exactly match the specified value. If
     * the field value doesn't match, an error message is generated.
     * ```proto
     * message MyFloat {
     *   // value must equal 42.0
     *   float value = 1 [(buf.validate.field).float.const = 42.0];
     * }
     * ```
     *
     * Generated from protobuf field <code>optional float const = 1 [json_name = "const", (.buf.validate.priv.field) = {</code>
     * @return float
     */
    public function getConst()
    {
        return isset($this->const) ? $this->const : 0.0;
    }

    public function hasConst()
    {
        return isset($this->const);
    }

    public function clearConst()
    {
        unset($this->const);
    }

    /**
     * `const` requires the field value to exactly match the specified value. If
     * the field value doesn't match, an error message is generated.
     * ```proto
     * message MyFloat {
     *   // value must equal 42.0
     *   float value = 1 [(buf.validate.field).float.const = 42.0];
     * }
     * ```
     *
     * Generated from protobuf field <code>optional float const = 1 [json_name = "const", (.buf.validate.priv.field) = {</code>
     * @param float $var
     * @return $this
     */
    public function setConst($var)
    {
        GPBUtil::checkFloat($var);
        $this->const = $var;

        return $this;
    }

    /**
     * `lt` requires the field value to be less than the specified value (field <
     * value). If the field value is equal to or greater than the specified value,
     * an error message is generated.
     * ```proto
     * message MyFloat {
     *   // value must be less than 10.0
     *   float value = 1 [(buf.validate.field).float.lt = 10.0];
     * }
     * ```
     *
     * Generated from protobuf field <code>float lt = 2 [json_name = "lt", (.buf.validate.priv.field) = {</code>
     * @return float
     */
    public function getLt()
    {
        return $this->readOneof(2);
    }

    public function hasLt()
    {
        return $this->hasOneof(2);
    }

    /**
     * `lt` requires the field value to be less than the specified value (field <
     * value). If the field value is equal to or greater than the specified value,
     * an error message is generated.
     * ```proto
     * message MyFloat {
     *   // value must be less than 10.0
     *   float value = 1 [(buf.validate.field).float.lt = 10.0];
     * }
     * ```
     *
     * Generated from protobuf field <code>float lt = 2 [json_name = "lt", (.buf.validate.priv.field) = {</code>
     * @param float $var
     * @return $this
     */
    public function setLt($var)
    {
        GPBUtil::checkFloat($var);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * `lte` requires the field value to be less than or equal to the specified
     * value (field <= value). If the field value is greater than the specified
     * value, an error message is generated.
     * ```proto
     * message MyFloat {
     *   // value must be less than or equal to 10.0
     *   float value = 1 [(buf.validate.field).float.lte = 10.0];
     * }
     * ```
     *
     * Generated from protobuf field <code>float lte = 3 [json_name = "lte", (.buf.validate.priv.field) = {</code>
     * @return float
     */
    public function getLte()
    {
        return $this->readOneof(3);
    }

    public function hasLte()
    {
        return $this->hasOneof(3);
    }

    /**
     * `lte` requires the field value to be less than or equal to the specified
     * value (field <= value). If the field value is greater than the specified
     * value, an error message is generated.
     * ```proto
     * message MyFloat {
     *   // value must be less than or equal to 10.0
     *   float value = 1 [(buf.validate.field).float.lte = 10.0];
     * }
     * ```
     *
     * Generated from protobuf field <code>float lte = 3 [json_name = "lte", (.buf.validate.priv.field) = {</code>
     * @param float $var
     * @return $this
     */
    public function setLte($var)
    {
        GPBUtil::checkFloat($var);
        $this->writeOneof(3, $var);

        return $this;
    }

    /**
     * `gt` requires the field value to be greater than the specified value
     * (exclusive). If the value of `gt` is larger than a specified `lt` or
     * `lte`, the range is reversed, and the field value must be outside the
     * specified range. If the field value doesn't meet the required conditions,
     * an error message is generated.
     * ```proto
     * message MyFloat {
     *   // value must be greater than 5.0 [float.gt]
     *   float value = 1 [(buf.validate.field).float.gt = 5.0];
     *   // value must be greater than 5 and less than 10.0 [float.gt_lt]
     *   float other_value = 2 [(buf.validate.field).float = { gt: 5.0, lt: 10.0 }];
     *   // value must be greater than 10 or less than 5.0 [float.gt_lt_exclusive]
     *   float another_value = 3 [(buf.validate.field).float = { gt: 10.0, lt: 5.0 }];
     * }
     * ```
     *
     * Generated from protobuf field <code>float gt = 4 [json_name = "gt", (.buf.validate.priv.field) = {</code>
     * @return float
     */
    public function getGt()
    {
        return $this->readOneof(4);
    }

    public function hasGt()
    {
        return $this->hasOneof(4);
    }

    /**
     * `gt` requires the field value to be greater than the specified value
     * (exclusive). If the value of `gt` is larger than a specified `lt` or
     * `lte`, the range is reversed, and the field value must be outside the
     * specified range. If the field value doesn't meet the required conditions,
     * an error message is generated.
     * ```proto
     * message MyFloat {
     *   // value must be greater than 5.0 [float.gt]
     *   float value = 1 [(buf.validate.field).float.gt = 5.0];
     *   // value must be greater than 5 and less than 10.0 [float.gt_lt]
     *   float other_value = 2 [(buf.validate.field).float = { gt: 5.0, lt: 10.0 }];
     *   // value must be greater than 10 or less than 5.0 [float.gt_lt_exclusive]
     *   float another_value = 3 [(buf.validate.field).float = { gt: 10.0, lt: 5.0 }];
     * }
     * ```
     *
     * Generated from protobuf field <code>float gt = 4 [json_name = "gt", (.buf.validate.priv.field) = {</code>
     * @param float $var
     * @return $this
     */
    public function setGt($var)
    {
        GPBUtil::checkFloat($var);
        $this->writeOneof(4, $var);

        return $this;
    }

    /**
     * `gte` requires the field value to be greater than or equal to the specified
     * value (exclusive). If the value of `gte` is larger than a specified `lt`
     * or `lte`, the range is reversed, and the field value must be outside the
     * specified range. If the field value doesn't meet the required conditions,
     * an error message is generated.
     * ```proto
     * message MyFloat {
     *   // value must be greater than or equal to 5.0 [float.gte]
     *   float value = 1 [(buf.validate.field).float.gte = 5.0];
     *   // value must be greater than or equal to 5.0 and less than 10.0 [float.gte_lt]
     *   float other_value = 2 [(buf.validate.field).float = { gte: 5.0, lt: 10.0 }];
     *   // value must be greater than or equal to 10.0 or less than 5.0 [float.gte_lt_exclusive]
     *   float another_value = 3 [(buf.validate.field).float = { gte: 10.0, lt: 5.0 }];
     * }
     * ```
     *
     * Generated from protobuf field <code>float gte = 5 [json_name = "gte", (.buf.validate.priv.field) = {</code>
     * @return float
     */
    public function getGte()
    {
        return $this->readOneof(5);
    }

    public function hasGte()
    {
        return $this->hasOneof(5);
    }

    /**
     * `gte` requires the field value to be greater than or equal to the specified
     * value (exclusive). If the value of `gte` is larger than a specified `lt`
     * or `lte`, the range is reversed, and the field value must be outside the
     * specified range. If the field value doesn't meet the required conditions,
     * an error message is generated.
     * ```proto
     * message MyFloat {
     *   // value must be greater than or equal to 5.0 [float.gte]
     *   float value = 1 [(buf.validate.field).float.gte = 5.0];
     *   // value must be greater than or equal to 5.0 and less than 10.0 [float.gte_lt]
     *   float other_value = 2 [(buf.validate.field).float = { gte: 5.0, lt: 10.0 }];
     *   // value must be greater than or equal to 10.0 or less than 5.0 [float.gte_lt_exclusive]
     *   float another_value = 3 [(buf.validate.field).float = { gte: 10.0, lt: 5.0 }];
     * }
     * ```
     *
     * Generated from protobuf field <code>float gte = 5 [json_name = "gte", (.buf.validate.priv.field) = {</code>
     * @param float $var
     * @return $this
     */
    public function setGte($var)
    {
        GPBUtil::checkFloat($var);
        $this->writeOneof(5, $var);

        return $this;
    }

    /**
     * `in` requires the field value to be equal to one of the specified values.
     * If the field value isn't one of the specified values, an error message
     * is generated.
     * ```proto
     * message MyFloat {
     *   // value must be in list [1.0, 2.0, 3.0]
     *   repeated float value = 1 (buf.validate.field).float = { in: [1.0, 2.0, 3.0] };
     * }
     * ```
     *
     * Generated from protobuf field <code>repeated float in = 6 [json_name = "in", (.buf.validate.priv.field) = {</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getIn()
    {
        return $this->in;
    }

    /**
     * `in` requires the field value to be equal to one of the specified values.
     * If the field value isn't one of the specified values, an error message
     * is generated.
     * ```proto
     * message MyFloat {
     *   // value must be in list [1.0, 2.0, 3.0]
     *   repeated float value = 1 (buf.validate.field).float = { in: [1.0, 2.0, 3.0] };
     * }
     * ```
     *
     * Generated from protobuf field <code>repeated float in = 6 [json_name = "in", (.buf.validate.priv.field) = {</code>
     * @param array<float>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setIn($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::FLOAT);
        $this->in = $arr;

        return $this;
    }

    /**
     * `in` requires the field value to not be equal to any of the specified
     * values. If the field value is one of the specified values, an error
     * message is generated.
     * ```proto
     * message MyFloat {
     *   // value must not be in list [1.0, 2.0, 3.0]
     *   repeated float value = 1 (buf.validate.field).float = { not_in: [1.0, 2.0, 3.0] };
     * }
     * ```
     *
     * Generated from protobuf field <code>repeated float not_in = 7 [json_name = "notIn", (.buf.validate.priv.field) = {</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getNotIn()
    {
        return $this->not_in;
    }

    /**
     * `in` requires the field value to not be equal to any of the specified
     * values. If the field value is one of the specified values, an error
     * message is generated.
     * ```proto
     * message MyFloat {
     *   // value must not be in list [1.0, 2.0, 3.0]
     *   repeated float value = 1 (buf.validate.field).float = { not_in: [1.0, 2.0, 3.0] };
     * }
     * ```
     *
     * Generated from protobuf field <code>repeated float not_in = 7 [json_name = "notIn", (.buf.validate.priv.field) = {</code>
     * @param array<float>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setNotIn($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::FLOAT);
        $this->not_in = $arr;

        return $this;
    }

    /**
     * `finite` requires the field value to be finite. If the field value is
     * infinite or NaN, an error message is generated.
     *
     * Generated from protobuf field <code>bool finite = 8 [json_name = "finite", (.buf.validate.priv.field) = {</code>
     * @return bool
     */
    public function getFinite()
    {
        return $this->finite;
    }

    /**
     * `finite` requires the field value to be finite. If the field value is
     * infinite or NaN, an error message is generated.
     *
     * Generated from protobuf field <code>bool finite = 8 [json_name = "finite", (.buf.validate.priv.field) = {</code>
     * @param bool $var
     * @return $this
     */
    public function setFinite($var)
    {
        GPBUtil::checkBool($var);
        $this->finite = $var;

        return $this;
    }

    /**
     * @return string
     */
    public function getLessThan()
    {
        return $this->whichOneof("less_than");
    }

    /**
     * @return string
     */
    public function getGreaterThan()
    {
        return $this->whichOneof("greater_than");
    }

}

