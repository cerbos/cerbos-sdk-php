<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: buf/validate/validate.proto

namespace Buf\Validate;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * RepeatedRules describe the constraints applied to `repeated` values.
 *
 * Generated from protobuf message <code>buf.validate.RepeatedRules</code>
 */
class RepeatedRules extends \Google\Protobuf\Internal\Message
{
    /**
     * `min_items` requires that this field must contain at least the specified
     * minimum number of items.
     * Note that `min_items = 1` is equivalent to setting a field as `required`.
     * ```proto
     * message MyRepeated {
     *   // value must contain at least  2 items
     *   repeated string value = 1 [(buf.validate.field).repeated.min_items = 2];
     * }
     * ```
     *
     * Generated from protobuf field <code>optional uint64 min_items = 1 [json_name = "minItems", (.buf.validate.priv.field) = {</code>
     */
    protected $min_items = null;
    /**
     * `max_items` denotes that this field must not exceed a
     * certain number of items as the upper limit. If the field contains more
     * items than specified, an error message will be generated, requiring the
     * field to maintain no more than the specified number of items.
     * ```proto
     * message MyRepeated {
     *   // value must contain no more than 3 item(s)
     *   repeated string value = 1 [(buf.validate.field).repeated.max_items = 3];
     * }
     * ```
     *
     * Generated from protobuf field <code>optional uint64 max_items = 2 [json_name = "maxItems", (.buf.validate.priv.field) = {</code>
     */
    protected $max_items = null;
    /**
     * `unique` indicates that all elements in this field must
     * be unique. This constraint is strictly applicable to scalar and enum
     * types, with message types not being supported.
     * ```proto
     * message MyRepeated {
     *   // repeated value must contain unique items
     *   repeated string value = 1 [(buf.validate.field).repeated.unique = true];
     * }
     * ```
     *
     * Generated from protobuf field <code>optional bool unique = 3 [json_name = "unique", (.buf.validate.priv.field) = {</code>
     */
    protected $unique = null;
    /**
     * `items` details the constraints to be applied to each item
     * in the field. Even for repeated message fields, validation is executed
     * against each item unless skip is explicitly specified.
     * ```proto
     * message MyRepeated {
     *   // The items in the field `value` must follow the specified constraints.
     *   repeated string value = 1 [(buf.validate.field).repeated.items = {
     *     string: {
     *       min_len: 3
     *       max_len: 10
     *     }
     *   }];
     * }
     * ```
     *
     * Generated from protobuf field <code>optional .buf.validate.FieldConstraints items = 4 [json_name = "items"];</code>
     */
    protected $items = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int|string $min_items
     *           `min_items` requires that this field must contain at least the specified
     *           minimum number of items.
     *           Note that `min_items = 1` is equivalent to setting a field as `required`.
     *           ```proto
     *           message MyRepeated {
     *             // value must contain at least  2 items
     *             repeated string value = 1 [(buf.validate.field).repeated.min_items = 2];
     *           }
     *           ```
     *     @type int|string $max_items
     *           `max_items` denotes that this field must not exceed a
     *           certain number of items as the upper limit. If the field contains more
     *           items than specified, an error message will be generated, requiring the
     *           field to maintain no more than the specified number of items.
     *           ```proto
     *           message MyRepeated {
     *             // value must contain no more than 3 item(s)
     *             repeated string value = 1 [(buf.validate.field).repeated.max_items = 3];
     *           }
     *           ```
     *     @type bool $unique
     *           `unique` indicates that all elements in this field must
     *           be unique. This constraint is strictly applicable to scalar and enum
     *           types, with message types not being supported.
     *           ```proto
     *           message MyRepeated {
     *             // repeated value must contain unique items
     *             repeated string value = 1 [(buf.validate.field).repeated.unique = true];
     *           }
     *           ```
     *     @type \Buf\Validate\FieldConstraints $items
     *           `items` details the constraints to be applied to each item
     *           in the field. Even for repeated message fields, validation is executed
     *           against each item unless skip is explicitly specified.
     *           ```proto
     *           message MyRepeated {
     *             // The items in the field `value` must follow the specified constraints.
     *             repeated string value = 1 [(buf.validate.field).repeated.items = {
     *               string: {
     *                 min_len: 3
     *                 max_len: 10
     *               }
     *             }];
     *           }
     *           ```
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Buf\Validate\Validate::initOnce();
        parent::__construct($data);
    }

    /**
     * `min_items` requires that this field must contain at least the specified
     * minimum number of items.
     * Note that `min_items = 1` is equivalent to setting a field as `required`.
     * ```proto
     * message MyRepeated {
     *   // value must contain at least  2 items
     *   repeated string value = 1 [(buf.validate.field).repeated.min_items = 2];
     * }
     * ```
     *
     * Generated from protobuf field <code>optional uint64 min_items = 1 [json_name = "minItems", (.buf.validate.priv.field) = {</code>
     * @return int|string
     */
    public function getMinItems()
    {
        return isset($this->min_items) ? $this->min_items : 0;
    }

    public function hasMinItems()
    {
        return isset($this->min_items);
    }

    public function clearMinItems()
    {
        unset($this->min_items);
    }

    /**
     * `min_items` requires that this field must contain at least the specified
     * minimum number of items.
     * Note that `min_items = 1` is equivalent to setting a field as `required`.
     * ```proto
     * message MyRepeated {
     *   // value must contain at least  2 items
     *   repeated string value = 1 [(buf.validate.field).repeated.min_items = 2];
     * }
     * ```
     *
     * Generated from protobuf field <code>optional uint64 min_items = 1 [json_name = "minItems", (.buf.validate.priv.field) = {</code>
     * @param int|string $var
     * @return $this
     */
    public function setMinItems($var)
    {
        GPBUtil::checkUint64($var);
        $this->min_items = $var;

        return $this;
    }

    /**
     * `max_items` denotes that this field must not exceed a
     * certain number of items as the upper limit. If the field contains more
     * items than specified, an error message will be generated, requiring the
     * field to maintain no more than the specified number of items.
     * ```proto
     * message MyRepeated {
     *   // value must contain no more than 3 item(s)
     *   repeated string value = 1 [(buf.validate.field).repeated.max_items = 3];
     * }
     * ```
     *
     * Generated from protobuf field <code>optional uint64 max_items = 2 [json_name = "maxItems", (.buf.validate.priv.field) = {</code>
     * @return int|string
     */
    public function getMaxItems()
    {
        return isset($this->max_items) ? $this->max_items : 0;
    }

    public function hasMaxItems()
    {
        return isset($this->max_items);
    }

    public function clearMaxItems()
    {
        unset($this->max_items);
    }

    /**
     * `max_items` denotes that this field must not exceed a
     * certain number of items as the upper limit. If the field contains more
     * items than specified, an error message will be generated, requiring the
     * field to maintain no more than the specified number of items.
     * ```proto
     * message MyRepeated {
     *   // value must contain no more than 3 item(s)
     *   repeated string value = 1 [(buf.validate.field).repeated.max_items = 3];
     * }
     * ```
     *
     * Generated from protobuf field <code>optional uint64 max_items = 2 [json_name = "maxItems", (.buf.validate.priv.field) = {</code>
     * @param int|string $var
     * @return $this
     */
    public function setMaxItems($var)
    {
        GPBUtil::checkUint64($var);
        $this->max_items = $var;

        return $this;
    }

    /**
     * `unique` indicates that all elements in this field must
     * be unique. This constraint is strictly applicable to scalar and enum
     * types, with message types not being supported.
     * ```proto
     * message MyRepeated {
     *   // repeated value must contain unique items
     *   repeated string value = 1 [(buf.validate.field).repeated.unique = true];
     * }
     * ```
     *
     * Generated from protobuf field <code>optional bool unique = 3 [json_name = "unique", (.buf.validate.priv.field) = {</code>
     * @return bool
     */
    public function getUnique()
    {
        return isset($this->unique) ? $this->unique : false;
    }

    public function hasUnique()
    {
        return isset($this->unique);
    }

    public function clearUnique()
    {
        unset($this->unique);
    }

    /**
     * `unique` indicates that all elements in this field must
     * be unique. This constraint is strictly applicable to scalar and enum
     * types, with message types not being supported.
     * ```proto
     * message MyRepeated {
     *   // repeated value must contain unique items
     *   repeated string value = 1 [(buf.validate.field).repeated.unique = true];
     * }
     * ```
     *
     * Generated from protobuf field <code>optional bool unique = 3 [json_name = "unique", (.buf.validate.priv.field) = {</code>
     * @param bool $var
     * @return $this
     */
    public function setUnique($var)
    {
        GPBUtil::checkBool($var);
        $this->unique = $var;

        return $this;
    }

    /**
     * `items` details the constraints to be applied to each item
     * in the field. Even for repeated message fields, validation is executed
     * against each item unless skip is explicitly specified.
     * ```proto
     * message MyRepeated {
     *   // The items in the field `value` must follow the specified constraints.
     *   repeated string value = 1 [(buf.validate.field).repeated.items = {
     *     string: {
     *       min_len: 3
     *       max_len: 10
     *     }
     *   }];
     * }
     * ```
     *
     * Generated from protobuf field <code>optional .buf.validate.FieldConstraints items = 4 [json_name = "items"];</code>
     * @return \Buf\Validate\FieldConstraints|null
     */
    public function getItems()
    {
        return $this->items;
    }

    public function hasItems()
    {
        return isset($this->items);
    }

    public function clearItems()
    {
        unset($this->items);
    }

    /**
     * `items` details the constraints to be applied to each item
     * in the field. Even for repeated message fields, validation is executed
     * against each item unless skip is explicitly specified.
     * ```proto
     * message MyRepeated {
     *   // The items in the field `value` must follow the specified constraints.
     *   repeated string value = 1 [(buf.validate.field).repeated.items = {
     *     string: {
     *       min_len: 3
     *       max_len: 10
     *     }
     *   }];
     * }
     * ```
     *
     * Generated from protobuf field <code>optional .buf.validate.FieldConstraints items = 4 [json_name = "items"];</code>
     * @param \Buf\Validate\FieldConstraints $var
     * @return $this
     */
    public function setItems($var)
    {
        GPBUtil::checkMessage($var, \Buf\Validate\FieldConstraints::class);
        $this->items = $var;

        return $this;
    }

}

