<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: cerbos/response/v1/response.proto

namespace GPBMetadata\Cerbos\Response\V1;

class Response
{
    public static $is_initialized = false;

    public static function initOnce() {
        $pool = \Google\Protobuf\Internal\DescriptorPool::getGeneratedPool();

        if (static::$is_initialized == true) {
          return;
        }
        \GPBMetadata\Cerbos\Audit\V1\Audit::initOnce();
        \GPBMetadata\Cerbos\Effect\V1\Effect::initOnce();
        \GPBMetadata\Cerbos\Engine\V1\Engine::initOnce();
        \GPBMetadata\Cerbos\Policy\V1\Policy::initOnce();
        \GPBMetadata\Cerbos\Schema\V1\Schema::initOnce();
        \GPBMetadata\Google\Protobuf\GPBEmpty::initOnce();
        \GPBMetadata\ProtocGenOpenapiv2\Options\Annotations::initOnce();
        $pool->internalAddGeneratedFile(
            '
Ìh
!cerbos/response/v1/response.protocerbos.response.v1cerbos/effect/v1/effect.protocerbos/engine/v1/engine.protocerbos/policy/v1/policy.protocerbos/schema/v1/schema.protogoogle/protobuf/empty.proto.protoc-gen-openapiv2/options/annotations.proto"Õ
PlanResourcesResponseo

request_id (	BPíAM2#Request ID provided in the request.J&"c2db17b8-4f9f-4fb1-acfd-9162a02be42b"R	requestId2
action (	BíA2ActionJ"view:public"RactionH
resource_kind (	B#íA 2Resource kind.J"album:object"RresourceKindJ
policy_version (	B#íA 2The policy version.J	"default"RpolicyVersionJ
filter (2%.cerbos.engine.v1.PlanResourcesFilterBíA2FilterRfilter
meta (2..cerbos.response.v1.PlanResourcesResponse.MetaB;íA826Optional metadata about the request evaluation processRmetaê
validation_errors (2!.cerbos.schema.v1.ValidationErrorB@íA=2;List of validation errors (if schema validation is enabled)RvalidationErrorsY
cerbos_call_id (	B3íA02.Audit log call ID associated with this requestRcerbosCallIdˇ
Meta]
filter_debug (	B:íA725Filter textual representation for debugging purposes.RfilterDebugm
matched_scope (	BHíAE21Policy scope that matched to produce this effect.J"acme.corp.base"RmatchedScope:)íA&
$2"Metadata about request evaluation.:<íA9
725Resources query plan response for a set of resources."»
CheckResourceSetResponseo

request_id (	BPíAM2#Request ID provided in the request.J&"c2db17b8-4f9f-4fb1-acfd-9162a02be42b"R	requestId€
resource_instances (2C.cerbos.response.v1.CheckResourceSetResponse.ResourceInstancesEntryBÊíA‚2KResults for each resource instance, keyed by the ID supplied in the requestJí{"XX125":{"actions":{"view:*":"EFFECT_ALLOW", "comment": "EFFECT_ALLOW"}}, "XX225":{"actions":{"view:*":"EFFECT_DENY", "comment": "EFFECT_DENY"}}}RresourceInstancesÇ
meta (21.cerbos.response.v1.CheckResourceSetResponse.MetaB;íA826Optional metadata about the request evaluation processRmetaã
ActionEffectMapé
actions (2I.cerbos.response.v1.CheckResourceSetResponse.ActionEffectMap.ActionsEntryB)íA&2$Mapping of each action to an effect.Ractionsê
validation_errors (2!.cerbos.schema.v1.ValidationErrorB@íA=2;List of validation errors (if schema validation is enabled)RvalidationErrorsT
ActionsEntry
key (	Rkey.
value (2.cerbos.effect.v1.EffectRvalue:8â
Metaœ
resource_instances (2H.cerbos.response.v1.CheckResourceSetResponse.Meta.ResourceInstancesEntryB’íA—2"Metadata about resource instances.J™{"XX125": {"actions": {"view:*":{"matched_policy": "album:object:default"},"comment":{"matched_policy": "album:object:default"}}, "effective_derived_roles": ["owner"]}, "XX225": {"actions": {"view:*":{"matched_policy": "album:object:default"},"comment":{"matched_policy": "album:object:default"}}}}RresourceInstancesà

EffectMetao
matched_policy (	BHíAE2+Policy that matched to produce this effect.J"album:object:default"RmatchedPolicym
matched_scope (	BHíAE21Policy scope that matched to produce this effect.J"acme.corp.base"RmatchedScope:íA
2Name of the action.Û

ActionMetaß
actions (2I.cerbos.response.v1.CheckResourceSetResponse.Meta.ActionMeta.ActionsEntryB¡íAΩ2OMetadata about the effect calculated for each action on this resource instance.Jj{"view:*":{"matched_policy": "album:object:default"},"comment":{"matched_policy": "album:object:default"}}RactionsÉ
effective_derived_roles (	BKíAH2;Derived roles that were effective during policy evaluation.J	["owner"]ReffectiveDerivedRolesx
ActionsEntry
key (	RkeyR
value (2<.cerbos.response.v1.CheckResourceSetResponse.Meta.EffectMetaRvalue:8:;íA8
624Unique resource instance ID supplied in the request.Ç
ResourceInstancesEntry
key (	RkeyR
value (2<.cerbos.response.v1.CheckResourceSetResponse.Meta.ActionMetaRvalue:8:)íA&
$2"Metadata about request evaluation.Ç
ResourceInstancesEntry
key (	RkeyR
value (2<.cerbos.response.v1.CheckResourceSetResponse.ActionEffectMapRvalue:8:9íA6
422Policy evaluation response for a set of resources."Â
CheckResourceBatchResponseo

request_id (	BPíAM2#Request ID provided in the request.J&"c2db17b8-4f9f-4fb1-acfd-9162a02be42b"R	requestId≥
results (2>.cerbos.response.v1.CheckResourceBatchResponse.ActionEffectMapBYíAV2Result for each resourceJ:[{"resourceId":"XX125","actions":{"view":"EFFECT_ALLOW"}}]Rresults‚
ActionEffectMap:
resource_id (	BíA2Resource IDJ"XX125"R
resourceId©
actions (2K.cerbos.response.v1.CheckResourceBatchResponse.ActionEffectMap.ActionsEntryBBíA?2$Mapping of each action to an effect.J{"view":"EFFECT_ALLOW"}Ractionsê
validation_errors (2!.cerbos.schema.v1.ValidationErrorB@íA=2;List of validation errors (if schema validation is enabled)RvalidationErrorsT
ActionsEntry
key (	Rkey.
value (2.cerbos.effect.v1.EffectRvalue:8:;íA8
624Policy evaluation response for a batch of resources."æ
CheckResourcesResponseo

request_id (	BPíAM2#Request ID provided in the request.J&"c2db17b8-4f9f-4fb1-acfd-9162a02be42b"R	requestId„
results (26.cerbos.response.v1.CheckResourcesResponse.ResultEntryBêíAå2Result for each resourceJp[{"resource": {"Id":"XX125", "kind":"album:object"}, "actions":{"view":"EFFECT_ALLOW","comment":"EFFECT_DENY"}}]RresultsY
cerbos_call_id (	B3íA02.Audit log call ID associated with this requestRcerbosCallIdΩ
ResultEntry[
resource (2?.cerbos.response.v1.CheckResourcesResponse.ResultEntry.ResourceRresource°
actions (2C.cerbos.response.v1.CheckResourcesResponse.ResultEntry.ActionsEntryBBíA?2$Mapping of each action to an effect.J{"view":"EFFECT_ALLOW"}Ractionsê
validation_errors (2!.cerbos.schema.v1.ValidationErrorB@íA=2;List of validation errors (if schema validation is enabled)RvalidationErrorsò
meta (2;.cerbos.response.v1.CheckResourcesResponse.ResultEntry.MetaB∆íA¬2 Metadata about policy evaluationJù{"actions": {"view:*":{"matched_policy": "album:object:default"},"comment":{"matched_policy": "album:object:default"}}, "effective_derived_roles": ["owner"]}Rmetaˆ
outputs (2.cerbos.engine.v1.OutputEntryBºíA∏2,Output for each rule with outputs configuredJá[{"src": "resource.expense.v1/acme#rule-001", "val": "view_allowed:alice"}, {"src": "resource.expense.v1/acme#rule-002", "val": "foo"}]Routputsº
Resource9
id (	B)íA&2ID of the resource instanceJ"XX125"RidQ
kind (	B=íA:2)Name of the resource kind being accessed.J"album:photo"Rkind≈
policy_version (	BùíAô2|The policy version to use to evaluate this request. If not specified, will default to the server-configured default version.J	"default"ä^[[:word:]]*$RpolicyVersionŸ
scope (	B¬íAæ2}A dot-separated scope that describes the hierarchy this resource belongs to. This is used for determining policy inheritance.J"acme.corp"ä/^([[:alnum:]][[:word:]\\-]*(\\.[[:word:]\\-]*)*)*$Rscope
Meta¶
actions (2H.cerbos.response.v1.CheckResourcesResponse.ResultEntry.Meta.ActionsEntryB¡íAΩ2OMetadata about the effect calculated for each action on this resource instance.Jj{"view:*":{"matched_policy": "album:object:default"},"comment":{"matched_policy": "album:object:default"}}RactionsÉ
effective_derived_roles (	BKíAH2;Derived roles that were effective during policy evaluation.J	["owner"]ReffectiveDerivedRolesà

EffectMetao
matched_policy (	BHíAE2+Policy that matched to produce this effect.J"album:object:default"RmatchedPolicym
matched_scope (	BHíAE21Policy scope that matched to produce this effect.J"acme.corp.base"RmatchedScope:íA
2Name of the action.Ç
ActionsEntry
key (	Rkey\\
value (2F.cerbos.response.v1.CheckResourcesResponse.ResultEntry.Meta.EffectMetaRvalue:8:)íA&
$2"Metadata about request evaluation.T
ActionsEntry
key (	Rkey.
value (2.cerbos.effect.v1.EffectRvalue:8:2íA/
-2+Response from the check resources API call."À
PlaygroundFailureC
errors (2+.cerbos.response.v1.PlaygroundFailure.ErrorRerrorsT
ErrorDetails
line (Rline
column (Rcolumn
context (	Rcontext
Error
file (	Rfile
error (	RerrorL
details (22.cerbos.response.v1.PlaygroundFailure.ErrorDetailsRdetails:íA
2Playground response"Ë
PlaygroundValidateResponse#
playground_id (	RplaygroundIdA
failure (2%.cerbos.response.v1.PlaygroundFailureH Rfailure2
success (2.google.protobuf.EmptyH Rsuccess:#íA 
2Playground validate responseB	
outcome"»
PlaygroundTestResponse#
playground_id (	RplaygroundIdA
failure (2%.cerbos.response.v1.PlaygroundFailureH RfailureR
success (26.cerbos.response.v1.PlaygroundTestResponse.TestResultsH RsuccessF
TestResults7
results (2.cerbos.policy.v1.TestResultsRresults:íA
2Playground test responseB	
outcome"π
PlaygroundEvaluateResponse#
playground_id (	RplaygroundIdA
failure (2%.cerbos.response.v1.PlaygroundFailureH RfailureY
success (2=.cerbos.response.v1.PlaygroundEvaluateResponse.EvalResultListH Rsuccess˛

EvalResult
action (	Raction0
effect (2.cerbos.effect.v1.EffectReffect
policy (	Rpolicy:
effective_derived_roles (	BReffectiveDerivedRolesR
validation_errors (2!.cerbos.schema.v1.ValidationErrorBRvalidationErrors¶
EvalResultListS
results (29.cerbos.response.v1.PlaygroundEvaluateResponse.EvalResultRresults6
effective_derived_roles (	ReffectiveDerivedRolesN
validation_errors (2!.cerbos.schema.v1.ValidationErrorRvalidationErrors7
outputs (2.cerbos.engine.v1.OutputEntryRoutputs:#íA 
2Playground evaluate responseB	
outcome"õ
PlaygroundProxyResponse#
playground_id (	RplaygroundIdA
failure (2%.cerbos.response.v1.PlaygroundFailureH Rfailure\\
check_resource_set (2,.cerbos.response.v1.CheckResourceSetResponseH RcheckResourceSetb
check_resource_batch (2..cerbos.response.v1.CheckResourceBatchResponseH RcheckResourceBatchR
plan_resources (2).cerbos.response.v1.PlanResourcesResponseH RplanResourcesU
check_resources (2*.cerbos.response.v1.CheckResourcesResponseH RcheckResources: íA
2Playground proxy responseB	
outcome"p
AddOrUpdatePolicyResponse0
success (2.google.protobuf.EmptyRsuccess:!íA
2Add/update policy response"‡
ListAuditLogEntriesResponseK
access_log_entry (2.cerbos.audit.v1.AccessLogEntryH RaccessLogEntryQ
decision_log_entry (2!.cerbos.audit.v1.DecisionLogEntryH RdecisionLogEntry:íA
2Audit log stream.B
entry"Ç
ServerInfoResponse
version (	Rversion
commit (	Rcommit

build_date (	R	buildDate:íA
2Server info response"j
ListPoliciesResponse

policy_ids (	R	policyIds:3íA0
.2,List of policies stored in the Cerbos server"e
GetPolicyResponse4
policies (2.cerbos.policy.v1.PolicyRpolicies:íA
2Get policy response"d
DisablePolicyResponse+
disabled_policies (RdisabledPolicies:íA
2Disable policy response"`
EnablePolicyResponse)
enabled_policies (RenabledPolicies:íA
2Enable policy response"ª
InspectPoliciesResponseR
results (28.cerbos.response.v1.InspectPoliciesResponse.ResultsEntryRresultsÅ
DerivedRoleA
name (	B-íA*2(Derived role name defined in the policy.RnameÜ
kind (2<.cerbos.response.v1.InspectPoliciesResponse.DerivedRole.KindB4íA12/Kind of the derived role defined in the policy.RkindN
source (	B6íA321Source of the derived role defined in the policy.Rsource"V
Kind
KIND_UNSPECIFIED 
KIND_UNDEFINED
KIND_EXPORTED
KIND_IMPORTED…
Variable=
name (	B)íA&2$Variable name defined in the policy.RnameK
value (	B5íA220Raw value of the variable defined in the policy.Rvalue
kind (29.cerbos.response.v1.InspectPoliciesResponse.Variable.KindB0íA-2+Kind of the variable defined in the policy.Rkindo
source (	BWíAT2RSource of the variable defined in the policy. Only exists if the kind is imported.RsourceE
used (B1íA.2,Whether the variable is used in a condition.Rused"x
Kind
KIND_UNSPECIFIED 
KIND_EXPORTED
KIND_IMPORTED

KIND_LOCAL
KIND_UNDEFINED
KIND_UNKNOWNÈ
Result=
actions (	B#íA 2Actions defined in the policy.Ractions|
	variables (24.cerbos.response.v1.InspectPoliciesResponse.VariableB(íA%2#Variables referenced in the policy.R	variablesî
	policy_id (	BwíAt2rFor blob, disk, and git stores policy ID is the file name. For other stores it is <kind>.<name>.<version>/<scope>.RpolicyIdä
derived_roles (27.cerbos.response.v1.InspectPoliciesResponse.DerivedRoleB,íA)2\'Derived roles referenced in the policy.RderivedRolesn
ResultsEntry
key (	RkeyH
value (22.cerbos.response.v1.InspectPoliciesResponse.ResultRvalue:8: íA
2Inspect policies response">
AddOrUpdateSchemaResponse:!íA
2Add/update schema response"U
ListSchemasResponse

schema_ids (	R	schemaIds:íA
2List schema ids response"f
GetSchemaResponse2
schemas (2.cerbos.schema.v1.SchemaRschemas:íA
2Get schema(s) response"a
DeleteSchemaResponse\'
deleted_schemas (RdeletedSchemas: íA
2Delete schema(s) response"3
ReloadStoreResponse:íA
2Reload store responseBw
dev.cerbos.api.v1.responseZ@github.com/cerbos/cerbos/api/genpb/cerbos/response/v1;responsev1™Cerbos.Api.V1.Responsebproto3'
        , true);

        static::$is_initialized = true;
    }
}

